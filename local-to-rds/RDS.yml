AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppName:
    Type: String
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: "Name"
          Value: !Ref AppName

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true 
      Tags:
      - Key: Name
        Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true 
      Tags:
      - Key: Name
        Value: PublicSubnet2
  
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetARouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1
  SubnetARouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2
  
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: RDS-postgres
      DBSubnetGroupDescription: subnet group for rds postgres
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
  RDSAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: For RDS Instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: "-1"
        FromPort: "-1"
        ToPort: "-1"
        CidrIp: 0.0.0.0/0
      
  DbInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    DependsOn:
    - RDSAccessSecurityGroup
    Properties:
      AllocatedStorage: "10"
      AllowMajorVersionUpgrade: false
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: !Ref AWS::StackName 
      Port: 5432
      PubliclyAccessible: true
      StorageType: gp2
      DBName: postgres
      Engine: postgres
      EngineVersion: 10.10
      MasterUsername: postgres
      MasterUserPassword: postgres
      VPCSecurityGroups:
        - !Ref RDSAccessSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup

Outputs:
  VPCID:
    Description: vpc id
    Value: !Ref VPC
  SubnetID:
    Description: Subnet id
    Value: !Ref PublicSubnet1
  RDSHostname:
    Description: RDS Hostname
    Value:
      Fn::GetAtt:
      - DbInstance
      - Endpoint.Address